<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <!-- ==================================================================== -->
    <SourceProxy class="vtkAMRGaussianPulseSource"
                 label="AMR GaussianPulse Source"
                 name="AMRGaussianPulseSource">
      <Documentation long_help="Create AMR dataset w/ Gaussian Pulse"
                     short_help="Create AMR dataset w/ Gaussian Pulse">AMR
                     dataset source, used for generating sample Berger-Collela
                     AMR dataset with a Gaussian Pulse field at the
                     center.</Documentation>
      <!-- Add gui component for setting the dimension -->
      <IntVectorProperty command="SetDimension"
                         default_values="3"
                         name="Dimension"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="2D"
                 value="2" />
          <Entry text="3D"
                 value="3" />
        </EnumerationDomain>
        <Documentation>Sets the desired dimension for the AMR dataset to
        generate.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRootSpacing"
                            default_values="0.5"
                            name="Root Spacing"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the spacing at level 0.</Documentation>
      </DoubleVectorProperty>
      <!-- Add gui component for setting the dimension -->
      <IntVectorProperty command="SetRefinementRatio"
                         default_values="2"
                         name="RefinementRatio"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="2"
                 value="2" />
          <Entry text="3"
                 value="3" />
          <Entry text="4"
                 value="4" />
        </EnumerationDomain>
        <Documentation>Sets the desired dimension for the AMR dataset to
        generate.</Documentation>
      </IntVectorProperty>
      <!-- Add gui components for manipulating the origin of the gaussian pulse -->
      <DoubleVectorProperty command="SetXPulseOrigin"
                            default_values="0.0"
                            name="XPulseOrigin"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="-1.0"
                           name="range" />
        <Documentation>Set x-coordinate for the pulse origin</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetYPulseOrigin"
                            default_values="0.0"
                            name="YPulseOrigin"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="-1.0"
                           name="range" />
        <Documentation>Set y-coordinate for the pulse origin</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetZPulseOrigin"
                            default_values="0.0"
                            name="ZPulseOrigin"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="-1.0"
                           name="range" />
        <Documentation>Set z-coordinate for the pulse origin</Documentation>
      </DoubleVectorProperty>
      <!--  Add gui components for manipulating the pulse width -->
      <DoubleVectorProperty command="SetXPulseWidth"
                            default_values="0.5"
                            name="XPulseWidth"
                            number_of_elements="1">
        <DoubleRangeDomain max="10.0"
                           min="0.5"
                           name="range" />
        <Documentation>Set x-coordinate for the pulse Width</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetYPulseWidth"
                            default_values="0.5"
                            name="YPulseWidth"
                            number_of_elements="1">
        <DoubleRangeDomain max="10.0"
                           min="0.5"
                           name="range" />
        <Documentation>Set y-coordinate for the pulse Width</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetZPulseWidth"
                            default_values="0.5"
                            name="ZPulseWidth"
                            number_of_elements="1">
        <DoubleRangeDomain max="10.0"
                           min="0.5"
                           name="range" />
        <Documentation>Set z-coordinate for the pulse Width</Documentation>
      </DoubleVectorProperty>
      <!--  Add gui components for manipulating the pulse width -->
      <DoubleVectorProperty command="SetPulseAmplitude"
                            default_values="0.5"
                            name="PulseAmplitude"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="0.0001"
                           name="range" />
        <Documentation>Sets the amplitude of the pulse</Documentation>
      </DoubleVectorProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkGlyphSource2D"
                 label="2D Glyph"
                 name="GlyphSource2D">
      <Documentation long_help="Create a 2D glyph (e.g., arrow, cross, dash, etc.)"
                     short_help="Create a 2D glyph">The 2D Glyph source is used
                     for generating a family of 2D glyphs, each of which lies
                     in the x-y plane. The output of the 2D Glyph source is
                     polygonal data.</Documentation>
      <IntVectorProperty command="SetGlyphType"
                         default_values="9"
                         name="GlyphType"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Vertex"
                 value="1" />
          <Entry text="Dash"
                 value="2" />
          <Entry text="Cross"
                 value="3" />
          <Entry text="ThickCross"
                 value="4" />
          <Entry text="Triangle"
                 value="5" />
          <Entry text="Square"
                 value="6" />
          <Entry text="Circle"
                 value="7" />
          <Entry text="Diamond"
                 value="8" />
          <Entry text="Arrow"
                 value="9" />
          <Entry text="ThickArrow"
                 value="10" />
          <Entry text="HookedArrow"
                 value="11" />
          <Entry text="EdgeArrow"
                 value="12" />
        </EnumerationDomain>
        <Documentation>This property specifies the type of the 2D
        glyph.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetFilled"
                         default_values="0"
                         name="Filled"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is 1, the 2D glyph will be
        a filled polygon; otherwise, only the edges (line segments) will be
        included in the output. This only applies to closed 2D
        glyphs.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the x, y, z coordinates of the origin of the 2D
        glyph.</Documentation>
      </DoubleVectorProperty>
      <!-- End 2DGlyph -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkVectorText"
                 label="3D Text"
                 name="VectorText">
      <Documentation long_help="3D geometric representation of a text string"
                     short_help="Create a 3D text object">The 3D Text source
                     displays a text string as polygonal data.</Documentation>
      <StringVectorProperty command="SetText"
                            default_values="3D Text"
                            name="Text"
                            number_of_elements="1"
                            panel_visibility="default">
        <Documentation>This property contains the text string to be displayed.
        The ASCII alphanumeric characters a-z, A-Z, and 0-9 are supported; so
        are ASCII punctuation marks. The only supported control character is
        "\n", which inserts a new line in the text string.</Documentation>
      </StringVectorProperty>
      <!-- End 3DText -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPVArrowSource"
                 label="Arrow"
                 name="ArrowSource">
      <Documentation long_help="3D arrow with a long cylindrical shaft and a cone for the tip"
                     short_help="Create a 3D arrow">The Arrow source appends a
                     cylinder to a cone to form a 3D arrow. The length of the
                     whole arrow is 1.0 unit. The output of the Arrow source is
                     polygonal data. This polygonal data will not contain
                     normals, so rendering of the arrow will be performed using
                     flat shading. The appearance of the arrow can be improved
                     without significantly increasing the resolution of the tip
                     and shaft by generating normals. (Use Normals Generation
                     filter).</Documentation>
      <IntVectorProperty command="SetTipResolution"
                         default_values="6"
                         name="TipResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="128"
                        min="1"
                        name="range" />
        <Documentation>This property specifies the number of faces in the
        representation of the tip of the arrow (the cone). As the resolution
        increases, the cone will become smoother.</Documentation>
      </IntVectorProperty>
      <!-- These arbitrary ranges come from the header file for vtkArrowSource.-->
      <DoubleVectorProperty command="SetTipRadius"
                            default_values="0.1"
                            name="TipRadius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain max="10"
                           min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the widest part of
        the tip of the arrow (the cone).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetTipLength"
                            default_values="0.35"
                            name="TipLength"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Documentation>This property specifies the length of the
        tip.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetShaftResolution"
                         default_values="6"
                         name="ShaftResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="128"
                        min="0"
                        name="range" />
        <Documentation>This property specifies the number of faces of the shaft
        of the arrow (the cylinder). As the resolution increases, the cylinder
        will become smoother.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetShaftRadius"
                            default_values="0.03"
                            name="ShaftRadius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the shaft of the
        arrow (the cylinder).</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInvert"
                         default_values="0"
                         name="Invert"
                         number_of_elements="1"
                         panel_visibility="default">
        <BooleanDomain name="bool" />
        <Documentation>Inverts the arrow direction.</Documentation>
      </IntVectorProperty>
      <!-- End Arrow -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkAxes"
                 label="Axes"
                 name="Axes">
      <Documentation long_help="Three lines representing the axes - red line along X, green line along Y, and blue line along Z"
                     short_help="Create three lines representing X, Y and Z axes">
                     The Axes source can be used to add a representation of the
                     coordinate system axes to the 3D scene. The X axis will be
                     drawn as a blue line, the Y axis as a green line, and the
                     Z axis as a red line. The axes can be drawn either as
                     three lines drawn in the positive direction from the
                     origin or as three lines crossing at the origin (drawn in
                     both the positive and negative directions). The output of
                     the Axes source is polygonal data. This polygonal data has
                     a scalar per line so that the lines can be colored. It
                     also has normals defined.</Documentation>
      <DoubleVectorProperty command="SetScaleFactor"
                            default_values="1.0"
                            name="ScaleFactor"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>By default the axes lines have a length of 1 (or 1 in
        each direction, for a total length of 2, if value of the Symmetric
        property is 1). Increasing or decreasing the value of this property
        will make the axes larger or smaller, respectively.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0.0 0.0 0.0"
                            name="Origin"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>The values of this property set the X, Y, and Z
        coordinates of the origin of the axes.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSymmetric"
                         default_values="0"
                         name="Symmetric"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When this property is set to 1, the axes extend along
        each of the positive and negative directions for a distance equal to
        the value of the Scale Factor property. When set to 0, the axes extend
        only in the positive direction.</Documentation>
      </IntVectorProperty>
      <!-- End Axes -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkOutlineSource"
                 label="Outline"
                 name="OutlineSource">
      <Documentation long_help="3D outline of the specified bounds."
                     short_help="Create an outline from the bounds">The Outline
                     source creates an axis aligned bounding box given the
                     user-specified minimum and maximum coordinates for each
                     axis.</Documentation>
      <DoubleVectorProperty command="SetBounds"
                            default_values="0 1 0 1 0 1"
                            name="Bounds"
                            number_of_elements="6"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>The values of this property specify the minimum and
        maximum X, Y, and Z coordinates (X min, X max, Y min, Y max, Z min, Z
        max) for drawing the outline.</Documentation>
      </DoubleVectorProperty>
      <!-- End OutlineSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkCubeSource"
                 label="Box"
                 name="CubeSource">
      <Documentation long_help="Create a box with specified X, Y, and Z lengths."
                     short_help="3D box with specified X, Y, and Z lengths">The
                     Box source can be used to add a box to the 3D scene. The
                     output of the Box source is polygonal data containing both
                     normals and texture coordinates.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetXLength"
                            default_values="1.0"
                            name="XLength"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the length of the box in the X
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetYLength"
                            default_values="1.0"
                            name="YLength"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the length of the box in the Y
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetZLength"
                            default_values="1.0"
                            name="ZLength"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the length of the box in the Z
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the center of the
        box.</Documentation>
      </DoubleVectorProperty>
      <!-- End Box -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkConeSource"
                 label="Cone"
                 name="ConeSource">
      <Documentation long_help="Create a 3D cone of a given radius and height."
                     short_help="3D cone of a given radius and height">The Cone
                     source can be used to add a polygonal cone to the 3D
                     scene. The output of the Cone source is polygonal
                     data.</Documentation>
      <IntVectorProperty animateable="1"
                         command="SetResolution"
                         default_values="6"
                         name="Resolution"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain max="512"
                        min="0"
                        name="range" />
        <Documentation>This property indicates the number of divisions around
        the cone. The higher this number, the closer the polygonal
        approximation will come to representing a cone, and the more polygons
        it will contain.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetRadius"
                            default_values="0.5"
                            name="Radius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the base of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetHeight"
                            default_values="1.0"
                            name="Height"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the height of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the center of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetDirection"
                            default_values="1.0 0.0 0.0"
                            name="Direction"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the orientation vector of the cone. The vector does
        not have to be normalized. The cone will point in the direction
        specified.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetCapping"
                         default_values="1"
                         name="Capping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the base of the cone will
        be capped with a filled polygon. Otherwise, the base of the cone will
        be open.</Documentation>
      </IntVectorProperty>
      <!-- End Cone -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkHyperTreeGridSource"
                 label="Hyper Tree Grid"
                 name="HyperTreeGridSource">
      <Documentation long_help="Hyper tree grid representing a tree-based AMR data set"
                     short_help="Create a hyper tree grid">This source uses input parameters,
                     most notably a string descriptor, to generate a vtkHyperTreeGrid instance
                     representing the corresponding a tree-based AMR grid with arbitrary rectilinear
                     geometry and either binary or ternary subdivision.</Documentation>
      <IntVectorProperty command="SetDimension"
                         default_values="3"
                         name="Dimension"
                         number_of_elements="1">
        <IntRangeDomain max="3"
                        min="2"
                        name="range" />
        <Documentation>This property specifies the dimensionality of
        the hyper tree grid.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetGridSize"
                         default_values="1 1 1"
                         name="GridSize"
                         number_of_elements="3">
        <IntRangeDomain name="range" />
        <Documentation>The three values in this property specify the number
        of root cells in each dimension of the hyper tree grid.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetGridScale"
                         default_values="1 1 1"
                         name="GridScale"
                         number_of_elements="3">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>The three values in this property specify the scale
        of the root cells in each dimension of the hyper tree grid.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetBranchFactor"
                         default_values="2"
                         name="BranchFactor"
                         number_of_elements="1">
        <IntRangeDomain max="3"
                        min="2"
                        name="range" />
        <Documentation>This property specifies the subdivision scheme
        (binary or ternary) of the hyper tree grid.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMaximumLevel"
                         default_values="1"
                         name="MaximumLevel"
                         number_of_elements="1">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>The value of this property specifies the maximum
        number of levels in the hyper tree grid.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetDescriptor"
                            default_values="."
                            name="Descriptor"
                            number_of_elements="1"
                            panel_visibility="default">
        <Hints>
          <Widget type="multi_line" />
        </Hints>
        <Documentation>This property specifies the string used to describe
        the hyper tree grid.</Documentation>
      </StringVectorProperty>
      <!-- End Hyper Tree Grid -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkHierarchicalFractal"
                 label="Hierarchical Fractal"
                 name="HierarchicalFractal">
      <Documentation long_help="Test source for AMR with HierarchicalDataSet"
                     short_help="Hierarchical fractal">The Hierarchical Fractal
                     source is a collection of uniform grids. All have the same
                     dimensions. Each block has a different origin and spacing.
                     This source uses the Mandelbrot source to create cell
                     data. The fractal array is scaled to look like a volume
                     fraction.</Documentation>
      <IntVectorProperty command="SetDimensions"
                         default_values="10"
                         name="Dimensions"
                         number_of_elements="1">
        <IntRangeDomain max="64"
                        min="2"
                        name="range" />
        <Documentation>This property specifies the X, Y, Z cell dimensions of a
        block.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetFractalValue"
                            default_values="9.5"
                            name="FractalValue"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>The value of this property will be mapped to 0.5 for use
        as a volume fraction.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetMaximumLevel"
                         default_values="5"
                         name="MaximumLevel"
                         number_of_elements="1">
        <IntRangeDomain max="10"
                        min="1"
                        name="range" />
        <Documentation>This property specifies how many levels of refinement
        should be included in this hierarchical dataset.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetGhostLevels"
                         default_values="1"
                         name="GhostLevels"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This property specifies whether ghost levels should be
        generated at processor boundaries.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTwoDimensional"
                         default_values="1"
                         name="TwoDimensional"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the generated dataset will
        be 2D; otherwise it will be 3D.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetAsymetric"
                         default_values="0"
                         name="Asymetric"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 0, all the blocks will be the
        same size. If it is set to 1, an asymmetric dataset will be created:
        some blocks will have an X dimension that is larger by 2
        units.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetGenerateRectilinearGrids"
                         default_values="0"
                         name="RectilinearGrids"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the hierarchical dataset
        will contain rectilinear grids; otherwise it will contain uniform
        grids.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="GetTimeStepRange"
                         information_only="1"
                         name="TimeStepRangeInfo">
        <SimpleIntInformationHelper />
      </IntVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetTimeStep"
                         default_values="0"
                         name="TimeStep"
                         number_of_elements="1" >
        <IntRangeDomain name="range"
                        default_mode="min" >
          <RequiredProperties>
            <Property function="Range"
                      name="TimeStepRangeInfo" />
          </RequiredProperties>
        </IntRangeDomain>
        <Documentation>This property specifies the timestep to use for this
        dataset.</Documentation>
      </IntVectorProperty>
      <!-- End HierarchicalFractal -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkCylinderSource"
                 label="Cylinder"
                 name="CylinderSource">
      <Documentation long_help="Create a 3D cylinder of a given radius and height."
                     short_help="3D cylinder of a given radius and height">The
                     Cylinder source can be used to add a polygonal cylinder to
                     the 3D scene. The output of the Cylinder source is
                     polygonal data containing both normals and texture
                     coordinates.</Documentation>
      <IntVectorProperty command="SetResolution"
                         default_values="6"
                         name="Resolution"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain max="512"
                        min="2"
                        name="range" />
        <Documentation>This property indicates the number of divisions around
        the cylinder. The higher this number, the closer the polygonal
        approximation will come to representing a cylinder, and the more
        polygons it will contain.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetHeight"
                            default_values="1.0"
                            name="Height"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the height of the cylinder
        (along the y axis).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRadius"
                            default_values="0.5"
                            name="Radius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the
        cylinder.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the coordinate value at the
        center of the cylinder.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCapping"
                         default_values="1"
                         name="Capping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the ends of the cylinder
        will each be capped with a closed polygon. Otherwise, the ends of the
        cylinder will be open.</Documentation>
      </IntVectorProperty>
      <!-- End Cylinder -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkLineSource"
                 label="Line"
                 name="LineSource">
      <Documentation long_help="This source creates a line between two points. The resolution indicates how many segments are in the line."
                     short_help="Create a line between two points">The Line
                     source can be used to interactively (using a 3D widget) or
                     manually (using the entries on the user interface) add a
                     line to the 3D scene. The output of the Line source is
                     polygonal data.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetPoint1"
                            default_values="-0.5 0.0 0.0"
                            name="Point1"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the first
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetPoint2"
                            default_values="0.5 0.0 0.0"
                            name="Point2"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the second
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetResolution"
                         default_values="6"
                         name="Resolution"
                         number_of_elements="1"
                         panel_visibility="never">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the number of pieces into which
        to divide the line.</Documentation>
      </IntVectorProperty>
      <Hints>
        <PropertyGroup label="Line"
                       type="LineSource">
          <Property function="Point1WorldPosition"
                    name="Point1" />
          <Property function="Point2WorldPosition"
                    name="Point2" />
          <Property function="Resolution"
                    name="Resolution" />
        </PropertyGroup>
      </Hints>
      <!-- End Line -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPVNullSource"
                 label="Ruler"
                 name="Ruler">
      <Documentation long_help="This is a line source that can be used to measure distance between two points"
                     short_help="Create a ruler">The ruler can be used to
                     interactively (using a 3D widget) or manually (using the
                     entries on the user interface) specify two points and then
                     determine the distance between the two points. To place
                     points on the surface of any dataset, one can use the 'p'
                     key shortcut.</Documentation>
      <DoubleVectorProperty default_values="-0.5 0.0 0.0"
                            name="Point1"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the first
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty default_values="0.5 0.0 0.0"
                            name="Point2"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the second
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <Hints>
        <PropertyGroup label="Distance"
                       type="Distance">
          <Property function="Point1WorldPosition"
                    name="Point1" />
          <Property function="Point2WorldPosition"
                    name="Point2" />
        </PropertyGroup>
      </Hints>
      <!-- End Line -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkImageMandelbrotSource"
                 label="Mandelbrot"
                 name="ImageMandelbrotSource">
      <Documentation long_help="Representation (unsigned char) of the Mandlebrot set in up to 3 dimensions"
                     short_help="Create a Mandelbrot representation">The
                     Mandelbrot source can be used to add a uniform rectilinear
                     grid with scalar values derived from the Mandelbrot set to
                     the 3D scene. The equation used is z = z^2 + C (where z
                     and C are complex, and C is a constant). The scalar values
                     in the grid are the number of iterations of the equation
                     it takes for the magnitude of the value to become greater
                     than 2. In the equation, the initial value of z is 0. By
                     default, the real component of C is mapped onto the X
                     axis; the imaginary component of C is mapped onto the Y
                     axis; and the imaginary component of the initial value is
                     mapped onto the Z axis. If a two-dimensional extent is
                     specified, the resulting image will be displayed. If a
                     three-dimensional extent is used, then the bounding box of
                     the volume will be displayed. The output of the Mandelbrot
                     source is image (uniform rectilinear)
                     data.</Documentation>
      <IntVectorProperty command="SetWholeExtent"
                         default_values="0 250 0 250 0 0"
                         name="WholeExtent"
                         number_of_elements="6"
                         panel_visibility="advanced">
        <IntRangeDomain name="range" />
        <Documentation>The six values in the property indicate the X, Y, and Z
        extent of the output data. The first two numbers are the minimum and
        maximum X extent; the next two are the minimum and maximum Y extent;
        and the final two are the minimum and maximum Z extent. The numbers are
        inclusive, so values of 0, 250, 0, 250, 0, 0 indicate that the
        dimensions of the output will be 251 x 251 x 1.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetProjectionAxes"
                         default_values="0 1 2"
                         name="ProjectionAxes"
                         number_of_elements="3">
        <IntRangeDomain name="range" />
        <Documentation>The three values in this property allow you to specify
        the projection from the 4D space used by the Mandelbrot set to the axes
        of the 3D volume. By default, the real component of C (represented by
        0) is mapped to the X axis; the imaginary component of C (represented
        by 1) is mapped to the Y axis; and the real component of X, the initial
        value (represented by 2) is mapped to the Z axis. The imaginary
        component of X is represented by 3. All values entered must be between
        0 and 3, inclusive.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOriginCX"
                            default_values="-1.75 -1.25 0.0 0.0"
                            name="OriginCX"
                            number_of_elements="4">
        <DoubleRangeDomain name="range" />
        <Documentation>The four values of this property indicate (in order) the
        components of C (real and imaginary) and the components of the initial
        value, X (real and imaginary).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSizeCX"
                            default_values="2.5 2.5 2.0 1.5"
                            name="SizeCX"
                            number_of_elements="4">
        <DoubleRangeDomain name="range" />
        <Documentation>The four values of this property indicate the length of
        the output in each of the four dimensions (the real and imaginary
        components of C and the real and imaginary components of X). The three
        dimensions specified in the Projection Axes property will determine
        which of these values specify the length of the axes in the
        output.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetMaximumNumberOfIterations"
                         default_values="100"
                         label="Maximum Number of Iterations"
                         name="MaximumNumberOfIterations"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain max="5000"
                        min="1"
                        name="range" />
        <Documentation>The value of this property specifies the limit on
        computational iterations (i.e., the maximum number of iterations to
        perform to determine if the value will go above 2). Values less than
        2.0 after the specified number of iterations are considered in the
        fractal set.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSubsampleRate"
                         default_values="1"
                         name="SubsampleRate"
                         number_of_elements="1">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the rate at which to subsample
        the volume. The extent of the dataset in each dimension will be divided
        by this value.</Documentation>
      </IntVectorProperty>
      <!-- End Mandelbrot -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkHyperOctreeFractalSource"
                 label="Octree Fractal"
                 name="OctreeFractal">
      <Documentation long_help="Test source for octree with Mandelbrot fractal"
                     short_help="Octree Fractal">Create an octree from a
                     Mandelbrot fractal. See the Mandelbrot source for a
                     description of the variables used.</Documentation>
      <IntVectorProperty command="SetDimension"
                         default_values="2"
                         name="Dimension"
                         number_of_elements="1">
        <IntRangeDomain max="3"
                        min="1"
                        name="range" />
        <Documentation>This property specifies the dimensionality of the
        fractal: 1D - Binary tree line, 2D - Quadtree plane, 3D - Octree
        volume.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMaximumLevel"
                         default_values="5"
                         name="MaximumLevel"
                         number_of_elements="1">
        <IntRangeDomain max="11"
                        min="2"
                        name="range" />
        <Documentation>This property specifies the maximum refinement level for
        the grid.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMinimumLevel"
                         default_values="3"
                         name="MinimumLevel"
                         number_of_elements="1">
        <IntRangeDomain max="10"
                        min="1"
                        name="range" />
        <Documentation>This property specifies the minimum refinement level for
        the grid.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetProjectionAxes"
                         default_values="0 1 2"
                         name="ProjectionAxes"
                         number_of_elements="3">
        <IntRangeDomain name="range" />
        <Documentation>This property indicates which axes of the dataset to
        display. See Mandelbrot source for a description of the possible
        axes.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOriginCX"
                            default_values="-1.75 -1.25 0.0 0.0"
                            name="OriginCX"
                            number_of_elements="4">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the imaginary and real values
        for C (constant) and X (initial value). See Mandelbrot source for a
        description of the C and X variables.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSizeCX"
                            default_values="2.5 2.5 2.0 1.5"
                            name="SizeCX"
                            number_of_elements="4">
        <DoubleRangeDomain name="range" />
        <Documentation>The four values of this property indicate the length of
        the output in each of the four dimensions (the real and imaginary
        components of C and the real and imaginary components of X). The three
        dimensions specified in the Projection Axes property will determine
        which of these values specify the length of the axes in the
        output.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetMaximumNumberOfIterations"
                         default_values="100"
                         label="Maximum Number of Iterations"
                         name="MaximumNumberOfIterations"
                         number_of_elements="1">
        <IntRangeDomain max="5000"
                        min="1"
                        name="range" />
        <Documentation>The value of this property specifies the limit on
        computational iterations (i.e., the maximum number of iterations to
        perform to determine if the value will go above 2). Values less than
        2.0 after the specified number of iterations are considered in the
        fractal set.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetSpanThreshold"
                            default_values="2.0"
                            name="Threshold"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies a threshold value that
        determines when to subdivide a leaf node.</Documentation>
      </DoubleVectorProperty>
      <!-- End OctreeFractal -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPlaneSource"
                 label="Plane"
                 name="PlaneSource">
      <Documentation long_help="Create a parallelogram given an origin and two points. The resolution indicates the number of division along each axis of the plane."
                     short_help="Create a parallelogram from an origin and two points">
                     The Plane source can be used to add a polygonal
                     parallelogram to the 3D scene. Unlike the sphere, cone,
                     and cylinder sources, the parallelogram is exactly
                     represented at the lowest resolution, but higher
                     resolutions may be desired if this plane is to be used as
                     an input to a filter. The output of the Plane source is
                     polygonal data.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetOrigin"
                            default_values="-0.5 -0.5 0.0"
                            name="Origin"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinate of the origin
        (one corner) of the plane.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetPoint1"
                            default_values="0.5 -0.5 0.0"
                            name="Point1"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinate a second
        corner of the parallelogram. The line connecting this point and that
        specified by the Origin property define one edge of the parallelogram
        (its X axis).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetPoint2"
                            default_values="-0.5 0.5 0.0"
                            name="Point2"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinate a third corner
        of the parallelogram. The line connecting this point and that specified
        by the Origin property define a second edge of the parallelogram (its Y
        axis).</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetXResolution"
                         default_values="1"
                         name="XResolution"
                         number_of_elements="1">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the number of divisions along
        the X axis of the parallelogram.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetYResolution"
                         default_values="1"
                         name="YResolution"
                         number_of_elements="1">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the number of divisions along
        the Y axis of the parallelogram.</Documentation>
      </IntVectorProperty>
      <!-- End Plane -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPointSource"
                 label="Point Source"
                 name="PointSource">
      <Documentation long_help="Create a point cloud of a certain size, radius, and center."
                     short_help="Create a point cloud">The point source creates
                     a specified number of points within a given radius about a
                     specified center point.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinates of the center
        of the point cloud.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetNumberOfPoints"
                         default_values="1"
                         name="NumberOfPoints"
                         number_of_elements="1"
                         panel_visibility="never">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the number of points in the
        point cloud.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetRadius"
                            default_values="0.0"
                            name="Radius"
                            number_of_elements="1"
                            panel_visibility="never">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the point cloud,
        measured from the value of the Center property.</Documentation>
      </DoubleVectorProperty>
      <Hints>
        <PropertyGroup type="PointSource">
          <Property function="WorldPosition"
                    name="Center" />
          <Property function="Radius"
                    name="Radius" />
          <Property function="NumberOfPoints"
                    name="NumberOfPoints" />
        </PropertyGroup>
      </Hints>
      <!-- End PointSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkSphereSource"
                 label="Sphere"
                 name="SphereSource">
      <Documentation long_help="Create a 3D sphere given a center and radius."
                     short_help="Create a 3D sphere">The Sphere source can be
                     used to add a polygonal sphere to the 3D scene. The output
                     of the Sphere source is polygonal data with point normals
                     defined.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinates for the
        center of the sphere.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetRadius"
                            default_values="0.5"
                            name="Radius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>This property specifies the radius of the
        sphere.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetThetaResolution"
                         default_values="8"
                         name="ThetaResolution"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain min="3"
                        name="range" />
        <Documentation>The value of this property represents the number of
        divisions between Start Theta and End Theta around the sphere. (See the
        Start Theta and End Theta properties.) The theta divisions are similar
        to longitude lines on the earth. The higher the resolution, the closer
        the approximation will come to a sphere, and the more polygons there
        will be.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetStartTheta"
                            default_values="0"
                            name="StartTheta"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="360"
                           min="0"
                           name="range" />
        <Documentation>To form a complete sphere, the value of this property
        should be 0 degrees, and the value of the End Theta property should be
        360 degrees. The value of this property can be adjusted to form only a
        portion of a sphere.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetEndTheta"
                            default_values="360"
                            name="EndTheta"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="360"
                           min="0"
                           name="range" />
        <Documentation>The value of this property can be adjusted to form only
        a portion of a sphere. This value is measured in
        degrees.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPhiResolution"
                         default_values="8"
                         name="PhiResolution"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain min="3"
                        name="range" />
        <Documentation>The value of this property represents the number of
        divisions between Start Phi and End Phi on the sphere. (See the Start
        Phi and End Phi properties.) The phi divisions are similar to latitude
        lines on the earth.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetStartPhi"
                            default_values="0"
                            name="StartPhi"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="180"
                           min="0"
                           name="range" />
        <Documentation>To form a complete sphere, the value of this property
        should be 0 degrees, and the value of the End Phi property should be
        180 degrees. The value of this property can be adjusted to form only a
        portion of a sphere. Set the starting angle (in degrees) in the
        latitudinal direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetEndPhi"
                            default_values="180"
                            name="EndPhi"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="180"
                           min="0"
                           name="range" />
        <Documentation>The value of this property can be adjusted to form only
        a portion of a sphere. The value is measured in
        degrees.</Documentation>
      </DoubleVectorProperty>
      <!-- End Sphere -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkDiskSource"
                 label="Disk"
                 name="DiskSource">
      <Documentation long_help="Create a 3D disk with a specified inner and outer radius."
                     short_help="Create a 3D disk">The Disk source can be used
                     to add a polygonal disk to the 3D scene. The output of the
                     Disk source is polygonal data.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetInnerRadius"
                            default_values="0.5"
                            name="InnerRadius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>Specify inner radius of hole in disc.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetOuterRadius"
                            default_values="1.0"
                            name="OuterRadius"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>Specify outer radius of disc.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRadialResolution"
                         default_values="8"
                         name="RadialResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="1024"
                        min="3"
                        name="range" />
        <Documentation>Set the number of points in radial
        direction.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetCircumferentialResolution"
                         default_values="8"
                         name="CircumferentialResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="1024"
                        min="3"
                        name="range" />
        <Documentation>Set the number of points in circumferential
        direction.</Documentation>
      </IntVectorProperty>
      <!-- End DiscSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkSuperquadricSource"
                 label="Superquadric"
                 name="SuperquadricSource">
      <Documentation long_help="Create a superquadric according to the theta and phi roundness parameters. This one source can generate a wide variety of 3D objects including a box, a sphere, or a torus."
                     short_help="Create a superquadric according to the theta and phi roundness parameters">
      The Superquadric source can be used to add a polygonal superquadric to
      the 3D scene. This source can be used to create a wide variety of shapes
      (e.g., a sphere, a box, or a torus) by adjusting the roundness
      parameters. The output of the Superquadric source is polygonal data with
      point normals and texture coordinates defined.</Documentation>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinates of the center
        of the superquadric.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1.0 1.0 1.0"
                            name="Scale"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>The three values in this property are used to scale the
        superquadric in X, Y, and Z. The surface normals will be computed
        correctly even with anisotropic scaling.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetThetaResolution"
                         default_values="16"
                         name="ThetaResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="1024"
                        min="8"
                        name="range" />
        <Documentation>The value of this property represents the number of
        divisions in the theta (longitudinal) direction. This value will be
        rounded to the nearest multiple of 8.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetPhiResolution"
                         default_values="16"
                         name="PhiResolution"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain max="1024"
                        min="4"
                        name="range" />
        <Documentation>The value of this property represents the number of
        divisions in the phi (latitudinal) direction. This number will be
        rounded to the nearest multiple of 4.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetThickness"
                            default_values="0.3333"
                            name="Thickness"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1"
                           min="0.0001"
                           name="range" />
        <Documentation>If the value of the Toroidal property is 1, this value
        represents the thickness of the superquadric as a value between 0 and
        1. A value close to 0 leads to a thin object with a large hole, and a
        value near 1 leads to a thick object with a very small hole. Changing
        the thickness does not change the outer radius of the
        superquadric.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetThetaRoundness"
                            default_values="1"
                            name="ThetaRoundness"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0.01"
                           name="range" />
        <Documentation>This property defines the roundness of the superquadric
        in the theta (longitudinal) direction. A value of 0 represents a
        rectangular shape, a value of 1 represents a circular shape, and values
        greater than 1 produce higher order shapes.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetPhiRoundness"
                            default_values="1"
                            name="PhiRoundness"
                            number_of_elements="1"
                            panel_visibility="default">
        <DoubleRangeDomain min="0.01"
                           name="range" />
        <Documentation>This property defines the roundness in the phi
        (latitudinal) direction. A value of 0 represents a rectangular shape, a
        value of 1 represents a circular shape, and values greater than 1
        produce higher order shapes.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSize"
                            default_values="0.5"
                            name="Size"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>The value of this property represents the isotropic size
        of the superquadric. Note that both the Size and Thickness properties
        control coefficients of superquadric generation, so the value of this
        property may not exactly describe the size of the
        superquadric.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1"
                         command="SetToroidal"
                         default_values="1"
                         name="Toroidal"
                         number_of_elements="1"
                         panel_visibility="default">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is 0, the generated
        superquadric will not contain a hole (i.e., the superquadric will be
        ellipsoidal). Otherwise, a toroidal object is
        generated.</Documentation>
      </IntVectorProperty>
      <!-- End SuperQuadric -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkRTAnalyticSource"
                 label="Wavelet"
                 name="RTAnalyticSource">
      <Documentation long_help="Create a regular rectilinear grid in up to three dimensions with values varying according to a periodic function."
                     short_help="Create a rectilinear grid containing a wavelet">
                     The Wavelet source can be used to create a uniform
                     rectilinear grid in up to three dimensions with values
                     varying according to the following periodic function. OS =
                     M * G * (XM * sin(XF * x) + YM * sin(YF * y) + ZM * cos(ZF
                     * z)) OS is the output scalar; M represents the maximum
                     value; G represents the Gaussian; XM, YM, and ZM are the
                     X, Y, and Z magnitude values; and XF, YF, and ZF are the
                     X, Y, and Z frequency values. If a two-dimensional extent
                     is specified, the resulting image will be displayed. If a
                     three-dimensional extent is used, then the bounding box of
                     the volume will be displayed.</Documentation>
      <IntVectorProperty command="SetWholeExtent"
                         default_values="-10 10 -10 10 -10 10"
                         label="Whole Extent"
                         name="WholeExtent"
                         number_of_elements="6"
                         panel_visibility="default">
        <IntRangeDomain name="range" />
        <Documentation>The six values in this property indicate the X, Y, and Z
        extent of the output data. The first two values represent the minimum
        and maximum X indices, the next two are the minimum and maximum Y
        indices, and the last two are the minimum and maximum Z
        indices.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCenter"
                            default_values="0.0 0.0 0.0"
                            name="Center"
                            number_of_elements="3"
                            panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinates of the center
        of the dataset.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMaximum"
                            default_values="255.0"
                            name="Maximum"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This parameter specifies the maximum value (M) of the
        function.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetXFreq"
                            default_values="60.0"
                            name="XFreq"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the natural frequency in X (XF
        in the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetYFreq"
                            default_values="30.0"
                            name="YFreq"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the natural frequency in Y (YF
        in the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetZFreq"
                            default_values="40.0"
                            name="ZFreq"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the natural frequency in Z (ZF
        in the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetXMag"
                            default_values="10.0"
                            name="XMag"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the wave amplitude in X (XM in
        the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetYMag"
                            default_values="18.0"
                            name="YMag"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the wave amplitude in Y (YM in
        the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetZMag"
                            default_values="5.0"
                            name="ZMag"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the wave amplitude in Z (ZM in
        the equation).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetStandardDeviation"
                            default_values="0.5"
                            name="StandardDeviation"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the standard deviation of the
        Gaussian used in computing this function.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSubsampleRate"
                         default_values="1"
                         name="SubsampleRate"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>This property specifies the rate at which to subsample
        the volume. The extent of the dataset in each dimension will be divided
        by this value. (See the Whole Extent property.)</Documentation>
      </IntVectorProperty>

      <!-- Define property groups for better readability of panels -->
      <PropertyGroup label="Frequency">
        <Property name="XFreq" />
        <Property name="YFreq" />
        <Property name="ZFreq" />
      </PropertyGroup>

      <PropertyGroup label="Amplitude">
        <Property name="XMag" />
        <Property name="YMag" />
        <Property name="ZMag" />
      </PropertyGroup>

      <!-- End Wavelet -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy class="vtkConeSource"
                 name="Test3DWidget">
      <IntVectorProperty command="SetResolution"
                         default_values="6"
                         name="Resolution"
                         number_of_elements="1">
        <IntRangeDomain max="128"
                        min="1"
                        name="range" />
        <Documentation>Set the number of faces used to generate the
        cone.</Documentation>
      </IntVectorProperty>
      <!-- End Test3DWidget -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPVTextSource"
                 label="Text"
                 name="TextSource">
      <Documentation long_help="The Text source generates a table containing text."
                     short_help="Display text">The Text source is used to
                     generate a 1x1 vtkTable with a single text
                     string.</Documentation>
      <StringVectorProperty command="SetText"
                            default_values="Text"
                            name="Text"
                            number_of_elements="1"
                            panel_visibility="default">
        <Hints>
          <Widget type="multi_line" />
        </Hints>
        <Documentation>This property specifies the text to
        display.</Documentation>
      </StringVectorProperty>
      <Hints>
        <OutputPort index="0"
                    name="Output-0"
                    type="text" />
      </Hints>
      <!-- End of TextSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkQuerySelectionSource"
                 name="SelectionQuerySource">
      <IntVectorProperty command="SetFieldType"
                         default_values="0"
                         name="FieldType"
                         number_of_elements="1">
        <Documentation>The location of the array the selection came from (ex,
        point, cell).</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="CELL"
                 value="0" />
          <Entry text="POINT"
                 value="1" />
          <Entry text="FIELD"
                 value="2" />
          <Entry text="VERTEX"
                 value="3" />
          <Entry text="EDGE"
                 value="4" />
          <Entry text="ROW"
                 value="5" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetQueryString"
                            default_values=""
                            name="QueryString"
                            number_of_elements="1"
                            panel_visibility="default"></StringVectorProperty>
      <IntVectorProperty command="SetCompositeIndex"
                         default_values="-1"
                         name="CompositeIndex"
                         number_of_elements="1"></IntVectorProperty>
      <IntVectorProperty command="SetHierarchicalLevel"
                         default_values="-1"
                         name="HierarchicalLevel"
                         number_of_elements="1"></IntVectorProperty>
      <IntVectorProperty command="SetHierarchicalIndex"
                         default_values="-1"
                         name="HierarchicalIndex"
                         number_of_elements="1"></IntVectorProperty>
      <IntVectorProperty command="SetProcessID"
                         default_values="-1"
                         name="ProcessID"
                         number_of_elements="1"></IntVectorProperty>
      <StringVectorProperty command="GetUserFriendlyText"
                            information_only="1"
                            name="UserFriendlyText">
        <SimpleStringInformationHelper />
        <Documentation>Reconstructs the query as a user friendly text eg. "IDs
        &gt;= 12".</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetInverse"
                         default_values="0"
                         name="InsideOut"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When this property is false the selection describes
        everything that should be extracted. When this is true the selection
        describes everything that should NOT be extracted.</Documentation>
      </IntVectorProperty>
      <!-- end of SelectionQuerySource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <Proxy name="SelectionSourceBase">
      <Documentation>Internal proxy used to define the common API for Selection
      Source proxies. Do not use.</Documentation>
      <IntVectorProperty command="SetFieldType"
                         default_values="0"
                         name="FieldType"
                         number_of_elements="1">
        <Documentation>The location of the array the selection came from (ex,
        point, cell).</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="CELL"
                 value="0" />
          <Entry text="POINT"
                 value="1" />
          <Entry text="FIELD"
                 value="2" />
          <Entry text="VERTEX"
                 value="3" />
          <Entry text="EDGE"
                 value="4" />
          <Entry text="ROW"
                 value="5" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetContainingCells"
                         default_values="0"
                         name="ContainingCells"
                         number_of_elements="1">
        <Documentation>When field type is POINT, this controls whether single
        vertex cells will be produced for each selected point, or whether the
        cells that contain each selected point will be produced. When field
        type is CELL this has no effect.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInverse"
                         default_values="0"
                         name="InsideOut"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When this property is false the selection describes
        everything that should be extracted. When this is true the selection
        describes everything that should NOT be extracted.</Documentation>
      </IntVectorProperty>
    </Proxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="BlockSelectionSource">
      <Documentation>BlockSelectionSource is a source producing a block-based
      selection used to select blocks from a composite dataset.</Documentation>
      <IdTypeVectorProperty clean_command="RemoveAllBlocks"
                            command="AddBlock"
                            default_values="0"
                            label="Blocks"
                            name="Blocks"
                            number_of_elements="1"
                            number_of_elements_per_command="1"
                            repeat_command="1">
        <Documentation>The list of blocks that will be added to the selection
        produced by the selection source. The blocks are identified using their
        composite index (flat index).</Documentation>
      </IdTypeVectorProperty>
      <!-- End of BlockSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="FrustumSelectionSource">
      <Documentation>FrustumSelectionSource is a source producing a frustum
      selection.</Documentation>
      <DoubleVectorProperty argument_is_array="1"
                            command="SetFrustum"
                            default_values="0.0 0.0 1.0 0.0
         0.0 0.0 0.0 0.0
         0.0 1.0 1.0 0.0
         0.0 1.0 0.0 0.0
         1.0 0.0 1.0 0.0
         1.0 0.0 0.0 0.0
         1.0 1.0 1.0 0.0
         1.0 1.0 0.0 0.0"
                            label="Frustum"
                            name="Frustum"
                            number_of_elements="32">
        <Documentation>Vertices that define a frustum for the selection
        source.</Documentation>
      </DoubleVectorProperty>
      <!-- End of FrustumSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="GlobalIDSelectionSource">
      <Documentation>GlobalIDSelectionSource is a source producing a global ID
      based selection.</Documentation>
      <IdTypeVectorProperty clean_command="RemoveAllGlobalIDs"
                            command="AddGlobalID"
                            default_values="0"
                            label="Global IDs"
                            name="IDs"
                            number_of_elements="1"
                            number_of_elements_per_command="1"
                            repeat_command="1">
        <Documentation>The list of IDs that will be added to the selection
        produced by the selection source.</Documentation>
      </IdTypeVectorProperty>
      <!-- End of GlobalIDSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="PedigreeIDSelectionSource">
      <Documentation>PedigreeIDSelectionSource is a source producing a pedigree
      ID based selection.</Documentation>
      <StringVectorProperty clean_command="RemoveAllPedigreeIDs"
                            command="AddPedigreeID"
                            default_values="id 0"
                            element_types="2 0"
                            label="Pedigree IDs"
                            name="IDs"
                            number_of_elements="2"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>The list of integer IDs that will be added to the
        selection produced by the selection source, specified by the pair
        (domain, id).</Documentation>
      </StringVectorProperty>
      <StringVectorProperty clean_command="RemoveAllPedigreeStringIDs"
                            command="AddPedigreeStringID"
                            default_values="id foo"
                            element_types="2 2"
                            label="Pedigree String IDs"
                            name="StringIDs"
                            number_of_elements="2"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>The list of string IDs that will be added to the
        selection produced by the selection source, specified by the pair
        (domain, id).</Documentation>
      </StringVectorProperty>
      <!-- End of PedigreeIDSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="IDSelectionSource">
      <Documentation>IDSelectionSource is a source producing a ID based
      selection. This cannot be used for selecting composite
      datasets.</Documentation>
      <IdTypeVectorProperty clean_command="RemoveAllIDs"
                            command="AddID"
                            default_values="0 0"
                            name="IDs"
                            number_of_elements="2"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>The list of IDs that will be added to the selection
        produced by the selection source. This takes pairs of values as
        (process number, id).</Documentation>
      </IdTypeVectorProperty>
      <!-- End of IDSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="CompositeDataIDSelectionSource">
      <Documentation>CompositeDataIDSelectionSource used to create an ID based
      selection for composite datasets (Multiblock or HierarchicalBox
      dataset).</Documentation>
      <IdTypeVectorProperty clean_command="RemoveAllCompositeIDs"
                            command="AddCompositeID"
                            default_values="0 0 0"
                            name="IDs"
                            number_of_elements="3"
                            number_of_elements_per_command="3"
                            repeat_command="1">
        <Documentation>The list of IDs that will be added to the selection
        produced by the selection source. This takes 3-tuple of values as
        (flat-index, process number, id).</Documentation>
      </IdTypeVectorProperty>
      <!-- End of CompositeDataIDSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="HierarchicalDataIDSelectionSource">
      <Documentation>HierarchicalDataIDSelectionSource used to create an ID
      based selection for HierarchicalBox datasets.</Documentation>
      <IdTypeVectorProperty clean_command="RemoveAllHierarchicalIDs"
                            command="AddHierarhicalID"
                            default_values="0 0 0"
                            name="IDs"
                            number_of_elements="3"
                            number_of_elements_per_command="3"
                            repeat_command="1">
        <Documentation>The list of IDs that will be added to the selection
        produced by the selection source. This takes 3-tuple of values as
        (level, index, id).</Documentation>
      </IdTypeVectorProperty>
      <!-- End of HierarchicalDataIDSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="ThresholdSelectionSource">
      <Documentation>ThresholdSelectionSource is used to create a threshold
      based selection.</Documentation>
      <DoubleVectorProperty clean_command="RemoveAllThresholds"
                            command="AddThreshold"
                            name="Thresholds"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>The list of thresholds that will be added to the
        selection produced by the selection source.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetArrayName"
                            default_values="none"
                            name="ArrayName"
                            number_of_elements="1">
        <Documentation>For threshold and value selection, this controls the
        name of the scalar array that will be thresholded
        within.</Documentation>
      </StringVectorProperty>
      <!-- End of ThresholdSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy base_proxygroup="sources"
                 base_proxyname="SelectionSourceBase"
                 class="vtkPVSelectionSource"
                 name="LocationSelectionSource">
      <Documentation>LocationSelectionSource is used to create a location based
      selection.</Documentation>
      <DoubleVectorProperty clean_command="RemoveAllLocations"
                            command="AddLocation"
                            default_values="0 0 0"
                            name="Locations"
                            number_of_elements="3"
                            number_of_elements_per_command="3"
                            repeat_command="1">
        <Documentation>The list of locations that will be added to the
        selection produced by the selection source.</Documentation>
      </DoubleVectorProperty>
      <!-- End of LocationSelectionSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkTimeToTextConvertor"
                 label="Annotate Time"
                 name="TimeToTextConvertorSource">
      <Documentation long_help="Shows the animation time as text annnotation in the view."
                     short_help="Show animation time as text">The Annotate Time
                     source can be used to show the animation time in text
                     annotation.</Documentation>
      <StringVectorProperty command="SetFormat"
                            default_values="Time: %f"
                            name="Format"
                            number_of_elements="1"
                            panel_visibility="default">
        <Documentation>This property specifies the format used to display the
        input time (using printf style).</Documentation>
      </StringVectorProperty>
      <Hints>
        <OutputPort index="0"
                    name="Output-0"
                    type="text" />
      </Hints>
      <!-- End of TimeToTextConvertorSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkTimeSourceExample"
                 label="Time Source"
                 name="TimeSource">
      <Documentation long_help="Produces a single cell uniform grid with data values that vary over a sin(t) wave from t=0 to t=1 (radian)."
                     short_help="Produces a sine wave over time">Produces a
                     single cell uniform grid with data values that vary over a
                     sin(t) wave from t=0 to t=1 (radian).</Documentation>
      <IntVectorProperty command="SetAnalytic"
                         default_values="0"
                         name="Analytic"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Makes the time source produce discrete steps of or an
        analytic sin wave.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetXAmplitude"
                            default_values="0.0"
                            name="X Amplitude"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Controls how far the data set moves along X over
        time.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetYAmplitude"
                            default_values="0.0"
                            name="Y Amplitude"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Controls how far the data set moves along Y over
        time.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetGrowing"
                         default_values="0"
                         name="Growing"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Makes the time source grow and shrink along Y over
        time.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty information_only="1"
                            name="TimestepValues"
                            repeatable="1">
        <TimeStepsInformationHelper />
      </DoubleVectorProperty>
      <!-- End of TimeSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkDataObjectGenerator"
                 label="Data Object Generator"
                 name="DataObjectGenerator">
      <Documentation long_help="Parses a string to produce composite data objects consisting of simple templated datasets."
                     short_help="Produces simple (composite or atomic) data sets for testing.">
      vtkDataObjectGenerator parses a string and produces dataobjects from the
      dataobject template names it sees in the string. For example, if the
      string contains &quot;ID1&quot; the generator will create a vtkImageData.
      &quot;UF1&quot;, &quot;RG1&quot;, &quot;SG1&quot;, &quot;PD1&quot;, and
      &quot;UG1&quot; will produce vtkUniformGrid, vtkRectilinearGrid,
      vtkStructuredGrid, vtkPolyData and vtkUnstructuredGrid respectively.
      &quot;PD2&quot; will produce an alternate vtkPolydata. You can compose
      composite datasets from the atomic ones listed above - &quot;MB{}&quot;
      or &quot;HB[]&quot;. &quot;MB{ ID1 PD1 MB{} }&quot; for example will
      create a vtkMultiBlockDataSet consisting of three blocks: image data,
      poly data, multi-block (empty). Hierarchical Box data sets additionally
      require the notion of groups, declared within &quot;()&quot; braces, to
      specify AMR depth. &quot;HB[ (UF1)(UF1)(UF1) ]&quot; will create a
      vtkHierarchicalBoxDataSet representing an octree that is three levels
      deep, in which the firstmost cell in each level is
      refined.</Documentation>
      <StringVectorProperty command="SetProgram"
                            default_values="ID1"
                            name="Program"
                            number_of_elements="1">
        <Hints>
          <Widget type="multi_line" />
        </Hints>
        <Documentation>This property contains the string that is parsed to
        determine the structured of the output data object to
        produce.</Documentation>
      </StringVectorProperty>
      <!-- End DataObjectGenerator -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkNetworkImageSource"
                 name="NetworkImageSource"
                 post_push="UpdateImage"
                 processes="client|renderserver">
      <StringVectorProperty command="SetFileName"
                            name="FileName"
                            number_of_elements="1">
        <Documentation>Set the name of image file to load.</Documentation>
      </StringVectorProperty>
      <!-- End of NetworkImageSource -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkParametricFunctionSource"
                 name="SplineSource">
      <Documentation long_help="Tessellate parametric functions."
                     short_help="Tessellate parametric functions.">This class
                     tessellates parametric functions. The user must specify
                     how many points in the parametric coordinate directions
                     are required (i.e., the resolution), and the mode to use
                     to generate scalars.</Documentation>
      <ProxyProperty command="SetParametricFunction"
                     label="Parametric Function"
                     name="ParametricFunction">
        <ProxyListDomain name="proxy_list">
          <Proxy group="parametric_functions"
                 name="Spline" />
        </ProxyListDomain>
        <Documentation>Property used to reference the parametric function as
        data generator.</Documentation>
      </ProxyProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkTrivialProducer"
                 name="TrivialProducer">
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPVTrivialProducer"
                 name="PVTrivialProducer">
      <IntVectorProperty command="SetWholeExtent"
                         default_values="0 -1 0 -1 0 -1"
                         name="WholeExtent"
                         number_of_elements="6"
                         panel_visibility="never" >
        <Documentation>The values of this property specify the whole extent of
        the topologically regular grid.</Documentation>
      </IntVectorProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkDistributedTrivialProducer"
                 name="DistributedTrivialProducer">
      <IntVectorProperty command="SetWholeExtent"
                         default_values="0 -1 0 -1 0 -1"
                         name="WholeExtent"
                         number_of_elements="6"
                         panel_visibility="never" >
        <Documentation>The values of this property specify the whole extent of
        the topologically regular grid.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="UpdateFromGlobal"
                            default_values=""
                            name="UpdateDataset"
                            number_of_elements="1"
                            panel_visibility="default">
        <Documentation>This property allow to initialize the trivial producer based
          on a previously registered dataset.
        </Documentation>
      </StringVectorProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <MultiServerSourceProxy class="vtkPVMultiServerDataSource"
                            label="Remote Source Proxy"
                            name="MultiServerProxy"
                            processes="client">
      <Documentation long_help="This proxy allow the user to automatically embed inside a built-in session data objects that belong to other servers"
                     short_help="This proxy allow the user to automatically embed inside a built-in session data objects that belong to other servers">
      </Documentation>
      <Property name="DependencyLink" />
    </MultiServerSourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
